set-option -g prefix M-a
bind-key M-a send-prefix

# Split panes
bind v split-window -v
bind h split-window -h
unbind '"'
unbind %

set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color*:Tc"
# Kill pane no confirmation
unbind x
bind-key x kill-pane
set -s escape-time 0
set-option -g focus-events on

# Kudos to: https://github.com/furgerf/dotfiles/blob/master/arch/tmux.conf
# initial setup
# set -g default-terminal screen-256color
set -g status-keys vi

# unbind unused keys (and indicate what the not-unbound keys do)
unbind-key C-b # default prefix
unbind-key \~ # show messages
unbind-key p # select the previous window
unbind-key C-o # rotate through panes
unbind-key C-z # suspend tmux
# unbind-key Space # select next layout
# unbind-key ! # break pane to new window
unbind-key $ # rename current session
unbind-key % # split window horizontally
unbind-key & # kill window
# unbind-key ' # prompt for window index to select
# unbind-key ( # switch to previous client (session)
# unbind-key ) # switch to next client (session)
# unbind-key , # rename the current window
unbind-key - # delete the latest paste buffer
# unbind-key . # move the current window
unbind-key 0 # select window 0
unbind-key 1 # select window 1
unbind-key 2 # select window 2
unbind-key 3 # select window 3
unbind-key 4 # select window 4
unbind-key 5 # select window 5
unbind-key 6 # select window 6
unbind-key 7 # select window 7
unbind-key 8 # select window 8
unbind-key 9 # select window 9
# TODO continue


# make windows and panes start with index 1
set -g base-index 1
setw -g pane-base-index 1

# config reload
bind-key r source-file ~/.tmux.conf \; display-message "tmux.conf reloaded"

# lengthen the amount of time status messages are displayed
set-option -g display-time 2000
set-option -g display-panes-time 3000

# automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set -g set-titles-string 'tmux@#h [#S]: #I (#W)'

# key bindings for copy-paste
setw -g mode-keys vi
set-option -g renumber-windows on
bind-key Enter copy-mode # enter copy mode
bind-key b list-buffers  # list paster buffers
bind-key p paste-buffer  # paste from the top pate buffer
bind-key P choose-buffer # choose which buffer to paste from
# bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
# bind-key -T copy-mode-vi Escape send-keys -X cancel
# bind-key -T copy-mode-vi C-c send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "Copied to system clipboard"

# window activity monitor
#setw -g monitor-activity on
set -g visual-activity on

# set easier window split keys
bind-key s split-window -h -c '#{pane_current_path}'
bind-key v split-window -v -c '#{pane_current_path}'

# create new windows with the same path as the current WD
bind-key n new-window -c "#{pane_current_path}"
# bind-key n command-prompt "new-window -c '$PWD'"

# easier session handling
# bind-key n command-prompt "new-session -t '%%'"
# bind-key . command-prompt -I \#S "rename-session '%%'"
bind-key . command-prompt "rename-window '%%'"
bind-key , command-prompt "rename-session '%%'"
bind-key / choose-session

# use alt-hjkl keys without prefix key to switch panes
bind-key -n M-h select-pane -L
bind-key -n M-l select-pane -R
bind-key -n M-k select-pane -U
bind-key -n M-j select-pane -D
# bind-key -n C-s last-pane
unbind C-s
# use prefix, hl to switch windows
bind-key j previous-window
bind-key l next-window

# use shift-arrows and alt-arrows to switch windows
# bind-key -n C-Left  previous-window
# bind-key -n C-Right next-window
# bind-key -n M-s last-window
# quick navigation to numbered window
# bind-key -n M-1 select-window -t 1
# bind-key -n M-2 select-window -t 2
# bind-key -n M-3 select-window -t 3
# bind-key -n M-4 select-window -t 4
# bind-key -n M-5 select-window -t 5
# bind-key -n M-6 select-window -t 6
# bind-key -n M-7 select-window -t 7
# bind-key -n M-8 select-window -t 8
# bind-key -n M-9 select-window -t 9
bind-key -n F1 select-window -t 1
bind-key -n F2 select-window -t 2
bind-key -n F3 select-window -t 3
bind-key -n F4 select-window -t 4
bind-key -n F5 select-window -t 5
bind-key -n F6 select-window -t 6
bind-key -n F7 select-window -t 7
bind-key -n F8 select-window -t 8
bind-key -n F9 select-window -t 9

# miscellaneous
bind-key X confirm-before -p "kill-window #W? (y/n)" kill-window # kill window
# bind-key S source-file ~/.tmux-session.conf # load session
bind-key B break-pane -d # move current pane to new window
bind-key W setw synchronize-panes \; display-message "#{?pane_synchronized,Enabled,Disabled} pane synchronization"

# allow the keys to be used immediately after changing windows
set-option -g repeat-time 0

# No delay for escape key press
set -sg escape-time 0

# double press <prefix> to move to last window
bind-key h last-window
bind-key H last-window

# mouse mode - tmux 2.1
set -g mouse on

# mose mode - tmux doesn't work on tmux 2.1
#set -g mode-mouse on
#set -g mouse-resize-pane on
#set -g mouse-select-pane on
#set -g mouse-select-window on

# move pane with ctrl-alt-j/k
bind-key -n C-M-j swap-pane -D
bind-key -n C-M-k swap-pane -U
bind-key -n C-M-m swap-pane

set -g history-limit 10000

# tmux resurrect - NOTE: Switch to plugin manager if/when using more plugins in the future
# run-shell ~/git/dotfiles/arch/tmux/plugins/tmux-resurrect/resurrect.tmux
# set -g @resurrect-capture-pane-contents 'on'
# set -g @resurrect-strategy-vim 'session' # restore vim sessions from Sessions.vim
# set -g @resurrect-processes 'mongo "npm->npm start"'
#set -g @resurrect-save-bash-history 'on'

# bind-key Enter rename-window "#{b:pane_current_path}" \; \
#   send-keys "[ -f venv/bin/activate ] && source venv/bin/activate; [ -f Session.vim ] && { nvim -S || true; } || nvim" \; \
#   split-window -h -c "#{pane_current_path}" \; \
#   send-keys "g sba" \; \
#   split-window -v -c "#{pane_current_path}" \; \
#   send-keys "g" \; \
#   select-pane -L

# # Note, bindings are repeatable (within the default 500ms time limit) so that
# # you don't have to keep entering the prefix. (Prefix-H-H-H resizes by 15)
bind-key -n M-Left resize-pane -L 2
bind-key -n M-Right resize-pane -R 2
bind-key -n M-Down resize-pane -D 1
bind-key -n M-Up resize-pane -U 1
bind-key -n S-Left resize-pane -L 10
bind-key -n S-Right resize-pane -R 10
bind-key -n S-Down resize-pane -D 5
bind-key -n S-Up resize-pane -U 5

# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
# smart pane switching with awareness of vim splits
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
#
# tmux fingers
# run-shell ~/git/dotfiles/arch/tmux/plugins/tmux-fingers/tmux-fingers.tmux
# don't use compact hints by default (illegible) - still can toggle them with <Space>
# set -g @fingers-compact-hints 0

# THEME COLORS BASED ON gruvbox-baby
# Fork: https://github.com/crzdg/gruvbox-baby
DARK=#161616
BG_DARK=#161616
BG=#202020
BG_LIGHT=#242424
MEDIUM_GRAY=#504945
COMMENT=#665c54
GRAY=#DEDEDE
SOFT_YELLOW=#EEBD35
SOFT_GREEN=#98971a
BRIGHT_YELLOW=#fabd2f
ORANGE=#d65d0e
RED=#fb4934
ERROR_RED=#cc241d
MAGENTA=#b16286
PINK=#D4879C
LIGHT_BLUE=#7fa2ac
DARK_GRAY=#83a598
BLUE_GRAY=#458588
FOREST_GREEM=#689d6a
CLEAN_GREEN=#8ec07c
MILK=#E7D7AD
FOREGROUND=#ebdbb2

# status bar (left/right)
set -g status-justify centre
set -g status-bg $BG
set -g status-fg $RED # this shouldn't appear(?)
set -g status-interval 10
set -g status-left-length 70
set -g status-right-length 70
set-option -g status-position top

# LEFT STATUS BAR
STATUS_LEFT_1="#[bg=$BG_LIGHT,fg=$ORANGE]  [#S]  " # Session Name
STATUS_LEFT_2="#[bg=$BG,fg=$LIGHT_BLUE]  #(whoami)@#H   " # USER@HOSTNAME
STATUS_LEFT_3="#[bg=$BG_DARK,fg=$LIGHT_BLUE]  #(uptime | tr -s ' ' | cut -d' ' -f 3- | rev | cut -d',' -f 5- | rev)  " # uptime
STATUS_LEFT_4="#[default,fg=$ERROR_RED]  #{?client_prefix,       ,           }  " # prefix mode
set -g status-left $STATUS_LEFT_1$STATUS_LEFT_2$STATUS_LEFT_3$STATUS_LEFT_4 # set left status bar

# RIGHT STATUS BAR
STATUS_RIGHT_1="#[bg=$BG_LIGHT,fg=$ORANGE]  2⁸  " # ?
STATUS_RIGHT_2="#[bg=$BG,fg=$BRIGHT_YELLOW]  #(cut -d ' ' -f 1-3 /proc/loadavg)  " # Machine LOAD
STATUS_RIGHT_3="#[bg=$BG_DARK,fg=$BLUE_GRAY]  %b %d %Y %H:%M  " # TIME
STATUS_RIGHT_4="#[default,fg=$ERROR_RED]  #{?client_prefix,      ,          }  " # prefix mode
set -g status-right $STATUS_RIGHT_4$STATUS_RIGHT_3$STATUS_RIGHT_2$STATUS_RIGHT_1 # set right status bar

# MIDDLE BAR
set allow-rename off

# windows bar (status bar middle)
set -g window-status-current-style bg=$BRIGHT_YELLOW,fg=$BG_LIGHT
# set -g window-status-current-attr bold
set -g window-status-style bg=$MEDIUM_GRAY,fg=$BRIGHT_YELLOW
set -g window-status-last-style bg=$MEDIUM_GRAY,fg=$ORANGE
set -g window-status-separator ' '
# tmux messages/command prompt
set-option -g message-style bg=$BG_LIGHT,fg=$BRIGHT_YELLOW
# copy mode/session selection
# pane separators
set-option -g pane-border-style fg=$BRIGHT_YELLOW,bg=$BG_DARK
set-option -g pane-active-border-style fg=$BRIGHT_YELLOW,bg=$BG_DARK
# inactive panes
set-option -g window-style bg=$BG_DARK
# active pane
set-option -g window-active-style bg=$BG
